version: '3.8'

services:
  # Serviço do Frontend (React/Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_app
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      # Monta o código-fonte para refletir alterações em tempo real (hot-reloading)
      - ./frontend:/app
      # Evita que a pasta node_modules local sobrescreva a do contêiner
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true # Essencial para hot-reload em alguns sistemas
    networks:
      - net_web

  # Serviço do Backend (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_app
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      - NODE_ENV=development
    networks:
      - net_web

  # Serviço do Banco de Dados (PostgreSQL)
  postgres:
    image: postgres:15-alpine # Versão específica para maior previsibilidade
    container_name: postgres_db
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - net_web
    restart: unless-stopped

  # Serviço de Gerenciamento do Banco de Dados (PGAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_ui
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - net_web
    restart: unless-stopped

  # Serviço do Nginx (Proxy Reverso)
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - frontend
      - backend
    networks:
      - net_web

# Definição das Redes e Volumes
networks:
  net_web:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data: